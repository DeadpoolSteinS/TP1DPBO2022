/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tp1;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.SQLException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author nichiyo
 */
public class formBuku extends javax.swing.JFrame {

    dbConnection dbcon = new dbConnection();
    private File file;
    private Integer id = -1;
    /**
     * Creates new form formBuku
     */
    public formBuku() {
        initComponents();
    }
    
    public formBuku(Integer id, String penerbit, String author, String desc){
        initComponents();
        inputPenerbit.setText(penerbit);
        inputAuthor.setText(author);
        inputDesc.setText(desc);
        this.id = id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooser = new javax.swing.JFileChooser();
        titleFrame = new javax.swing.JLabel();
        penerbitLabel = new javax.swing.JLabel();
        inputPenerbit = new javax.swing.JTextField();
        authorLabel = new javax.swing.JLabel();
        inputAuthor = new javax.swing.JTextField();
        descLabel = new javax.swing.JLabel();
        inputDesc = new javax.swing.JTextField();
        imageLabel = new javax.swing.JLabel();
        chooseBtn = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleFrame.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titleFrame.setText("FORM BUKU");

        penerbitLabel.setText("Penerbit :");

        inputPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPenerbitActionPerformed(evt);
            }
        });

        authorLabel.setText("Author :");

        descLabel.setText("Description :");

        imageLabel.setText("Image :");

        chooseBtn.setText("Choose Image");
        chooseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseBtnActionPerformed(evt);
            }
        });

        submitBtn.setBackground(new java.awt.Color(51, 102, 255));
        submitBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(161, Short.MAX_VALUE)
                .addComponent(titleFrame)
                .addGap(157, 157, 157))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(penerbitLabel)
                    .addComponent(authorLabel)
                    .addComponent(descLabel)
                    .addComponent(imageLabel))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(inputPenerbit)
                        .addComponent(inputAuthor)
                        .addComponent(inputDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(submitBtn)
                        .addComponent(chooseBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(titleFrame)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(penerbitLabel)
                    .addComponent(inputPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorLabel)
                    .addComponent(inputAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descLabel)
                    .addComponent(inputDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imageLabel)
                    .addComponent(chooseBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(submitBtn)
                .addGap(32, 32, 32))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void inputPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPenerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPenerbitActionPerformed

    private void chooseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseBtnActionPerformed
        // TODO add your handling code here:
        FileFilter imageFile = new FileNameExtensionFilter("images","jpeg", "jpg", "png");
        chooser.addChoosableFileFilter(imageFile);
        chooser.setFileFilter(imageFile);
        if(chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            file = chooser.getSelectedFile();
        }
    }//GEN-LAST:event_chooseBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        String penerbit = inputPenerbit.getText();
        String author   = inputAuthor.getText();
        String desc     = inputDesc.getText();
        
        if(!penerbit.equals("") && !author.equals("") && !desc.equals("") && file != null){
            try {
                String imgFile  = file.getName();
                uploadImage();
                if(this.id >= 0){
                    dbcon.stm.execute("UPDATE buku SET img='" + imgFile + "',penerbit='" + penerbit + "',author='" + author + "',deskripsi='" + desc + "' WHERE id="+ this.id.toString() + ";");
                }
                else{
                    dbcon.stm.execute("INSERT INTO buku values (null,'" + imgFile + "','" + penerbit + "','" + author + "','" + desc + "');");
                }
                JOptionPane.showMessageDialog(null, "BERHASIL!");
            } catch (SQLException e) {
                System.err.println("Input Gagal " + e.getMessage());
            }
            inputPenerbit.setText("");
            inputAuthor.setText("");
            inputDesc.setText("");
            file = null;
        }
        else{
            JOptionPane.showMessageDialog(null, "Ada data yang kosong!");
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formBuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorLabel;
    private javax.swing.JButton chooseBtn;
    private javax.swing.JFileChooser chooser;
    private javax.swing.JLabel descLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JTextField inputAuthor;
    private javax.swing.JTextField inputDesc;
    private javax.swing.JTextField inputPenerbit;
    private javax.swing.JLabel penerbitLabel;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel titleFrame;
    // End of variables declaration//GEN-END:variables

    private void uploadImage() {
        try {
            Path fileDir = Paths.get("src/assets/" + file.getName());
            Path fromDir = Paths.get(file.getAbsolutePath());
            Files.copy(fromDir, fileDir, StandardCopyOption.REPLACE_EXISTING);
        } catch (IOException e) {
            System.err.println("Upload Image Gagal! " + e.getMessage());
        }
    }
}
